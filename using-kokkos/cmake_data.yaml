name: using-kokkos
include_prefix: USING_KOKKOS
description: Example project demonstrating Kokkos usage
vendor: scupit
version: 0.0.1

default_build_type: Debug

languages:
  cpp:
    min_standard: '17'

supported_compilers:
  - GCC
  - Clang
  - MSVC

output:
  using-kokkos:
    output_type: Executable
    entry_file: main.cpp
    link:
      - kokkos::kokkos
      # - kokkos::{ core, algorithms }
      # This code doesn't make use of these. They're just here to test if the targets exist and can be
      # linked properly.
      # - kokkos::{ containers, simd }

global_properties:
  ipo_enabled_by_default_for:
  - Release
  - MinSizeRel
  - RelWithDebInfo

predefined_dependencies:
  kokkos:
    # git_tag: "4.1.00"
    file_version: v4.1.0

build_configs:
  Debug:
    GCC:
      compiler_flags:
      - -Og
      - -g
      - -Wall
      - -Wextra
      - -Wconversion
      - -Wuninitialized
      - -pedantic
      - -pedantic-errors
    Clang:
      compiler_flags:
      - -Og
      - -g
      - -Wall
      - -Wextra
      - -Wconversion
      - -Wuninitialized
      - -pedantic
      - -pedantic-errors
    MSVC:
      compiler_flags:
      - /Od
      - /W4
      - /DEBUG
      - /RTC1
  Release:
    AllCompilers:
      defines:
      - NDEBUG
    GCC:
      compiler_flags:
      - -O3
      linker_flags:
      - -s
    Clang:
      compiler_flags:
      - -O3
      linker_flags:
      - -s
    MSVC:
      compiler_flags:
      - /O2
  MinSizeRel:
    AllCompilers:
      defines:
      - NDEBUG
    GCC:
      compiler_flags:
      - -Os
      linker_flags:
      - -s
    Clang:
      compiler_flags:
      - -Os
      linker_flags:
      - -s
    MSVC:
      compiler_flags:
      - /O1
  RelWithDebInfo:
    AllCompilers:
      defines:
      - NDEBUG
    GCC:
      compiler_flags:
      - -O2
      - -g
    Clang:
      compiler_flags:
      - -O2
      - -g
    MSVC:
      compiler_flags:
      - /O2
      - /DEBUG
