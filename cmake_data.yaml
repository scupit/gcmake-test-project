name: gcmake-test-project
include_prefix: CGEN_TEST
description: "GCMake rust test project"
version: "0.0.1"
default_build_type: Debug

languages:
  C:
    standard: 11
  Cpp:
    standard: 17

supported_compilers:
  - GCC
  - MSVC
  - Clang

output:
  test-json:
    output_type: Executable
    entry_file: test-json-main.cpp
    link:
      - nlohmann_json::nlohmann_json
  test-sfml:
    output_type: Executable
    entry_file: test-sfml-main.cpp
    link:
      - SFML::{ system, window }
  Main:
    # TODO: Add defines per target
    # defines:
    #   - GLOBAL_DEF="Is globally defined"
    output_type: Executable 
    entry_file: ./main.cpp
    link:
      - build-info-lib::build-info
      - dll-lib::dll-lib
      - toggle-lib::toggle-lib

global_defines:
  - GLOBAL_DEF="Is globally defined"

subprojects:
  - build-info-lib
  - sub-exe
  - dll-lib
  - toggle-lib
  - fmt-test
  - wxwidgets-test
  - glfw-test
  - glm-test
  - threads-test
  - sdl-test
  - stb-test
  - complex-lib
  - header-only

prebuild_config:
  link:
    - nlohmann_json::nlohmann_json

# gcmake_dependencies:

predefined_dependencies:
  SFML:
    git_tag: "2.5.1"
    # commit_hash: "2f11710abc5aa478503a7ff3f9e654bd2078ebab"
  nlohmann_json:
    git_tag: "v3.10.4"

build_configs:
  Debug:
    All:
      defines:
        - DEBUG_MODE=1
        # Testing quoted strings in defines
        - BUILD_MODE="Debug aw yeah"
    GCC:
      # Optional compiler flags: -fanalyzer, -static-libgcc, -static-libstdc++, -static
      compiler_flags: [ -Og, -g, -Wall, -Wextra, -Wconversion, -Wuninitialized, -pedantic, -pedantic-errors]
      defines:
        - GCC_DEBUG=1
    Clang:
      # Optional compiler flags: -mwindows, -static-libgcc, -static-libstdc++, -static
      compiler_flags: [ -Og, -g, -Wall, -Wextra, -Wconversion, -Wuninitialized, -pedantic, -pedantic-errors]
      defines:
        - CLANG_DEBUG=1
    MSVC:
      compiler_flags: [ /Od, /W4, /DEBUG ]
      defines:
        - MSVC_DEBUG=1

  Release:
    All:
      defines:
        - RELEASE_MODE=1
        - NDEBUG
        - BUILD_MODE="Release"
    GCC:
      # Optional compiler flags: -mwindows, -static-libgcc, -static-libstdc++, -static
      compiler_flags: [ -O3 ]
      linker_flags: [ -s ]
      defines:
        - GCC_RELEASE=1
    Clang:
      # Optional compiler flags: -mwindows, -static-libgcc, -static-libstdc++, -static
      compiler_flags: [ -O3 ]
      linker_flags: [ -s ]
      defines:
        - CLANG_RELEASE=1
    MSVC:
      compiler_flags: [ /O2, /GL ]
      defines:
        - MSVC_RELEASE=1

  MinSizeRel:
    All:
      defines:
        - SMALL_RELEASE_MODE=1
        - NDEBUG
        - BUILD_MODE="MinSizeRel"
    GCC:
      compiler_flags: [ -Os ]
      linker_flags: [ -s ]
      defines:
        - GCC_SMALL_RELEASE=1
    Clang:
      compiler_flags: [ -Os ]
      linker_flags: [ -s ]
      defines:
        - CLANG_SMALL_RELEASE=1
    MSVC:
      compiler_flags: [ /O1, /GL ]
      defines:
        - MSVC_SMALL_RELEASE=1
      
  RelWithDebInfo:
    All:
      defines:
        - DEBUGGABLE_RELEASE_MODE=1
        - BUILD_MODE="RelWithDebInfo"
    GCC:
      compiler_flags: [ -O2, -g ]
      defines:
        - GCC_DEBUGGABLE_RELEASE=1
    Clang:
      compiler_flags: [ -O2, -g ]
      defines:
        - CLANG_DEBUGGABLE_RELEASE=1
    MSVC:
      compiler_flags: [ /O2, /DEBUG ]
      defines:
        - MSVC_DEBUGGABLE_RELEASE=1
      